apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "application.name" . }}-external-secret
  labels:
    {{- include "application.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"       
spec:
  refreshInterval: {{ .Values.externalSecrets.refreshInterval | quote }}
  secretStoreRef:
    name: vault-{{ or (eq .Values.ENVIRONMENT "dev") (hasPrefix "sit-" .Release.Namespace) (hasPrefix "pit-" .Release.Namespace) | ternary "fake-scylla" "backend"}}
    kind: SecretStore
  target:
    name: {{ .Release.Name }}-auth
  data:
    - secretKey: PG_DATABASE
      remoteRef:
        key: {{ .Values.externalSecrets.vaultPaths.db }}
        property: database
    - secretKey: PG_HOST
      remoteRef:
        key: {{ .Values.externalSecrets.vaultPaths.db }}
        property: hostnames
    - secretKey: PG_PASSWORD
      remoteRef:
        key: {{ .Values.externalSecrets.vaultPaths.db }}
        property: password
    - secretKey: PG_PORT
      remoteRef:
        key: {{ .Values.externalSecrets.vaultPaths.db }}
        property: port
    - secretKey: PG_USER
      remoteRef:
        key: {{ .Values.externalSecrets.vaultPaths.db }}
        property: username